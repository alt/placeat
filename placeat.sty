%%
%% This is file `placeat.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% placeat.dtx  (with options: `package')
%% 
%% EXPERIMENTAL CODE
%% 
%% This package is copyright © 2013 Arno L. Trautmann. It may be distributed and/or
%% modified under the conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version. This work has the LPPL mainten-
%% ance status ‘maintained’.
\ProvidesPackage{placeat}%
  [2013/04/08 v0.0a placeat package]
\input{luatexbase.sty}
\RequirePackage{xparse}
\RequirePackage{luacode}
\directlua{dofile(kpse.find_file("placeat.lua"))}
\NewDocumentCommand\placeat{ggd()d<>m}{
  \IfValueT{#1}{                        %% two coordinates in { }{ } pair.
    \IfValueT{#2}{                      %% if second argument is not given, everything breaks. not nice.
      \placeatthreenumbers{#1}{#2}{#5}
    }
  }
  \IfValueT{#3}{                        %% one argument as ( , ) coordinate pair.
    \placeatthreenumbers{\firstof#3}{\secondof#3}{#5}
  }
  \IfValueT{#4}{
    \luaexec{
      y   = string.byte('#4',1)-64
      x   = string.byte('#4',2)-48
      x2  = string.byte('#4',3)
      if x2 then x = x*10 + x2-48 end
      tex.print("\\placeatthreenumbers{"..(x).."}{"..(y+1).."}")}{#5}
  }
}
\NewDocumentCommand\placeatminipage{mmom}{
  \IfValueTF{#3}{\gdef\widthofplaceat{#3}}{\gdef\widthofplaceat{10cm}}
  \placeat{#1}{#2}{\begin{minipage}{\widthofplaceat}{#4}\end{minipage}}
}
\def\placeatthreenumbers#1#2#3{
  \luaexec{
    nr = nr+1
    dacoordtmp = ((#1-1)*tex.pagewidth/65536/gridnr*1.005)..","..(-(#2-1)*tex.pageheight/65536/gridnr)
    dacoord[nr] = "\\put("..dacoordtmp..")"
    tex.print("\\expandafter\\gdef\\csname command"..(nr).."\\endcsname")}% begin of command definition
  {#3}  %% this is what \command[nr] will contain
}
\def\firstof #1,#2{#1}
\def\secondof #1,#2{#2}
\let\ifdrawgrid\iftrue
\luaexec{
  drawgrid = false
  nr = 0
  dacoord = {}
  gridnr = 10
  gridlinewidth = 0.01
}
\def\placeatAddToBoxForeground#1{%
  \AtBeginShipoutBox
  \edef\placeatrestore{%
    \vfuzz=\the\vfuzz\relax
    \vbadness=\the\vbadness\relax
    \dimen\ltx@zero=\the\dimen\ltx@zero\relax
  }%
  \edef\placeatrestorebox{%
    \ht\AtBeginShipoutBox=\the\ht\AtBeginShipoutBox\relax
    \dp\AtBeginShipoutBox=\the\dp\AtBeginShipoutBox\relax
  }%
  \dimen\ltx@zero=\ht\AtBeginShipoutBox
  \advance\dimen\ltx@zero by \dp\AtBeginShipoutBox
  \setbox\AtBeginShipoutBox=\vbox to \dimen\ltx@zero{%
    \setbox\ltx@zero=\hbox{%
      \begingroup
        \placeatrestore
        #1%
      \endgroup
    }%
    \wd\ltx@zero=0pt\relax
    \ht\ltx@zero=0pt\relax
    \dp\ltx@zero=0pt\relax
    \baselineskip=0pt\relax
    \lineskip=0pt\relax
    \lineskiplimit=0pt\relax
    \unvbox\AtBeginShipoutBox
    \kern-\dimen\ltx@zero
    \copy\ltx@zero
    \kern\dimen\ltx@zero
  }%
  \placeatrestore
  \placeatrestorebox
}

\def\placeatUpperLeftForeground#1{%
  \placeatAddToBoxForeground{%
    \kern-\pdfhorigin\relax
    \vbox to 0pt{%
      \kern-\pdfvorigin\relax
      \begingroup
      \picture(0,0)\relax
      \ignorespaces
      #1%
      \endpicture
      \endgroup
      \vss
    }%
  }%
}

\AtBeginDocument{
  \AtBeginShipout{%
    \placeatUpperLeftForeground{%
      \ifdrawgrid \drawgrid \fi
      \luaexec{%
        for i =1,nr do
          tex.print(dacoord[i].."{\\csname command"..(i).."\\endcsname}")
        end
        nr=0
      }
    }
  }
}
\def\drawgrid{
  \luatexlatelua{
    pdf_print("q")
    linewidth(gridlinewidth)
    for i = 1,gridnr do
      h = i*tex.pageheight/gridnr/65536
      w = i*tex.pagewidth/gridnr/65536
      move(0,-h) line(tex.pagewidth,-h) stroke()
      move(w,0) line(w,-tex.pageheight) stroke()
    end
    pdf_print("Q")
  }
  \fontsize{8}{10}\selectfont
  \luaexec{
    for i=1,gridnr do
      h = i*tex.pageheight/gridnr/65536
      w = i*tex.pagewidth/gridnr/65536
      tex.print("\\put("..(w)..",-7){\\llap{"..i.."}}")
      tex.print("\\put("..(0)..","..(-h).."){\\char00"..(64+i).."}")
    end
  }
}
\ExplSyntaxOn
\keys_define:nn{placeat}{
  final.code:n           = \directlua{placeat_final = true drawgrid = false},
  nogrid.code:n          = \let\ifdrawgrid\iffalse,
  drawgrid.code:n          = \let\ifdrawgrid\iftrue,
  gridnumber.code:n      = \directlua{gridnr = #1},
  gridlinewidth.code:n   = \directlua{gridlinewidth = #1}
}
\DeclareDocumentCommand\placeatsetup{m}{
  \keys_set:nn{placeat}{#1}
}
\ExplSyntaxOff
%% 
%%
%% End of file `placeat.sty'.
